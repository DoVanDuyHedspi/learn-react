{"version":3,"sources":["component/clock.js","component/header.js","component/dialog/confirmDelete.js","component/common/Pagination.js","component/list.js","component/common/FormWrapper.js","component/detail.js","component/body.js","App.js","serviceWorker.js","index.js"],"names":["Clock","props","calculateTime","seconds","date","Date","setSeconds","toTimeString","replace","startSeconds","getTime","startTime","clock","state","this","setState","timerID","setInterval","tick","clearInterval","React","Component","Header","className","ConfirmDeleteModal","id","index","tabIndex","role","aria-hidden","type","data-dismiss","aria-label","onClick","handleDelete","Pagination","pager","items","length","setPage","prevProps","prevState","page","totalPages","getPager","onChangePage","currentPage","totalItems","pageSize","startPage","endPage","Math","ceil","startIndex","endIndex","min","pages","Array","keys","map","i","key","List","handleHover","e","hoverIndex","handleHoverOut","pageIndex","document","addEventListener","handleKeyDown","bind","removeEventListener","pageOfItems","keyCode","scope","style","minWidth","list","slice","user","absoluteIndex","enable","editStatus","onMouseOver","onMouseOut","name","email","handleEdit","data-toggle","data-target","indexDelete","FormWrapper","validateSubmit","message","errorMessage","test","handleChange","a","inputName","target","value","enableSubmit","children","child","htmlFor","onChange","handleCancel","handleSubmit","disabled","Detail","userUpdate","handleUpdate","aria-describedby","Body","updateLocalStorage","localStorage","setItem","JSON","stringify","listDefault","getItem","parse","editUser","editIndex","console","log","splice","detail","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.8a41a7fa.chunk.js","sourcesContent":["import React from 'react';\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    const time = new Date();\n    const startSeconds = time.getTime() - props.startTime.getTime()\n    const clock = this.calculateTime(startSeconds);\n    this.state = {\n      seconds: startSeconds,\n      clock: clock,\n    }\n  }\n\n  tick() {\n    this.setState({\n      seconds: this.state.seconds + 1,\n      clock: this.calculateTime(this.state.seconds),\n    });\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  calculateTime = (seconds) => {\n    var date = new Date(1970,0,1);\n    date.setSeconds(seconds);\n    return date.toTimeString().replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, \"$1\");\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.clock}\n      </div>\n    )\n  }\n}\n\nexport default Clock;","import React from 'react';\nimport '../css/header.css';\nimport Clock from './clock';\n\nfunction Header(props) {\n  return (\n    <div className=\"header col-md-12 p-2\">\n      {/* <h2>Header</h2> */}\n      <div className=\"text-right\">\n        <Clock startTime={props.startTime} />\n      </div>\n    </div>\n  );\n}\n\nexport default Header;","import React from 'react';\n\nfunction ConfirmDeleteModal(props) {\n  return (\n    <div className=\"modal fade\" id={`deleteConfirmModal${props.index}`} tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n      <div className=\"modal-dialog\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">Xac nhan</h5>\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <p>Ban co chac chan muon xoa nguoi dung nay khong? </p>\n          </div>\n          <div className=\"modal-footer\">\n            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">No</button>\n            <button \n              type=\"button\" \n              className=\"btn btn-primary\" \n              data-dismiss=\"modal\"\n              onClick={() => props.handleDelete(props.index)}\n            >Yes</button> \n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ConfirmDeleteModal;","import React from 'react';\nimport '../../css/list.css';\n\nclass Pagination extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { pager: {} };\n  }\n\n  componentWillMount() {\n    // set page if items array isn't empty\n    if (this.props.items && this.props.items.length) {\n      this.setPage(1);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // reset page if items array has changed\n    if (this.props.items !== prevProps.items) {\n      this.setPage(1);\n    }\n  }\n\n  setPage(page) {\n    var items = this.props.items;\n    var pager = this.state.pager;\n\n    if (page < 1 || page > pager.totalPages) {\n      return;\n    }\n\n    // get new pager object for specified page\n    pager = this.getPager(items.length, page);\n\n    // get new page of items from items array\n    // var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\n    \n\n    // update state\n    this.setState({ pager: pager });\n    // call change page function in parent component\n    this.props.onChangePage(pager.currentPage, pager.totalPages);\n  }\n\n  getPager(totalItems, currentPage, pageSize) {\n    // default to first page\n    currentPage = currentPage || 1;\n\n    // default page size is 10\n    pageSize = pageSize || 2;\n\n    // calculate total pages\n    var totalPages = Math.ceil(totalItems / pageSize);\n\n    var startPage, endPage;\n    if (totalPages <= 10) {\n      // less than 10 total pages so show all\n      startPage = 1;\n      endPage = totalPages;\n    } else {\n      // more than 10 total pages so calculate start and end pages\n      if (currentPage <= 6) {\n        startPage = 1;\n        endPage = 10;\n      } else if (currentPage + 4 >= totalPages) {\n        startPage = totalPages - 9;\n        endPage = totalPages;\n      } else {\n        startPage = currentPage - 5;\n        endPage = currentPage + 4;\n      }\n    }\n\n    // calculate start and end item indexes\n    var startIndex = (currentPage - 1) * pageSize;\n    var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n\n    // create an array of pages to ng-repeat in the pager control\n    var pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\n\n    // return object with all pager properties required by the view\n    return {\n      totalItems: totalItems,\n      currentPage: currentPage,\n      pageSize: pageSize,\n      totalPages: totalPages,\n      startPage: startPage,\n      endPage: endPage,\n      startIndex: startIndex,\n      endIndex: endIndex,\n      pages: pages\n    };\n  }\n\n  render() {\n    var pager = this.state.pager;\n\n    if (!pager.pages || pager.pages.length <= 1) {\n      // don't display pager if there is only 1 page\n      return null;\n    }\n\n    return (\n      <nav aria-label=\"Page navigation example\">\n        <ul className=\"pagination justify-content-center\">\n          <li className={`page-item  ${pager.currentPage === 1 ? 'disabled' : ''}`}>\n            <a className=\"page-link\" onClick={() => this.setPage(1)}>First</a>\n          </li>\n          <li className={`page-item  ${pager.currentPage === 1 ? 'disabled' : ''}`}>\n            <a className=\"page-link\" onClick={() => this.setPage(pager.currentPage - 1)}>Previous</a>\n          </li>\n          {pager.pages.map((page, index) =>\n            <li key={index} className={`page-item ${pager.currentPage === page ? 'active' : ''}`}>\n              <a className=\"page-link\" onClick={() => this.setPage(page)}>{page}</a>\n            </li>\n          )}\n          <li className={`page-item ${pager.currentPage === pager.totalPages ? 'disabled' : ''}`}>\n            <a className=\"page-link\" onClick={() => this.setPage(pager.currentPage + 1)}>Next</a>\n          </li>\n          <li className={`page-item ${pager.currentPage === pager.totalPages ? 'disabled' : ''}`}>\n            <a className=\"page-link\" onClick={() => this.setPage(pager.totalPages)}>Last</a>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Pagination;","import React from 'react';\nimport ConfirmDeleteModal from './dialog/confirmDelete';\nimport Pagination from './common/Pagination';\nimport '../css/list.css';\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hoverIndex: -1,\n      pageIndex: 1,\n      pageSize: 2,\n      totalPages: 0,\n    }\n  }\n\n  componentWillMount() {\n    document.addEventListener(\"keydown\", this.handleKeyDown.bind(this));\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyDown.bind(this));\n  }\n\n  handleHover = (e, index) => {\n    this.setState({\n      hoverIndex: index\n    })\n  }\n\n  handleHoverOut = (e, index) => {\n    this.setState({\n      hoverIndex: -1\n    })\n  } \n\n  onChangePage(pageOfItems, totalPages) {\n    this.setState({ \n      pageIndex: pageOfItems,\n      totalPages: totalPages\n    });\n  }\n\n  handleKeyDown(e) {\n    const { hoverIndex } = this.state;\n    const { pageIndex } = this.state;\n    if(hoverIndex !== -1) {\n      if (e.keyCode === 38 && hoverIndex > 0) {\n        this.setState( prevState => ({\n          hoverIndex: prevState.hoverIndex - 1,\n        }))\n      } else if (e.keyCode === 40 && hoverIndex < this.state.pageSize - 1) {\n        this.setState( prevState => ({\n          hoverIndex: prevState.hoverIndex + 1\n        }))\n      } else if (e.keyCode === 37 && pageIndex > 1) {\n        this.setState( prevState => ({\n          pageIndex: prevState.pageIndex - 1,\n        }))\n      } else if (e.keyCode === 39 && pageIndex < this.state.totalPages) {\n        this.setState( prevState => ({\n          pageIndex: prevState.pageIndex + 1,\n        }))\n      }\n    }\n  }\n\n  render() {\n    const startIndex = (this.state.pageIndex-1)*this.state.pageSize;\n    const endIndex = this.state.pageIndex*this.state.pageSize;\n    const UserDetail = (user, index) => {\n      let absoluteIndex = index + (this.state.pageIndex-1)*2;\n      let enable = (index === this.state.hoverIndex) && !this.props.editStatus;\n      return (\n        <tr \n          key={index} \n          onMouseOver={(e) => this.handleHover(e, index)}\n          onMouseOut={(e) => this.handleHoverOut(e, index)}\n        >\n          <td>{user.name}</td>\n          <td>{user.email}</td>\n          <td\n            className={enable ? \"enable\":\"\"}\n          >\n            <button \n              type=\"button\" \n              className=\"btn btn-outline-info btn-sm mx-auto\"\n              onClick={() => this.props.handleEdit(absoluteIndex)}\n            >\n              Edit\n            </button>\n          </td>\n          <td\n            className={enable ? \"enable\":\"\"}\n          >\n            <button \n              type=\"button\" \n              className=\"btn btn-outline-danger btn-sm mx-auto\"\n              data-toggle=\"modal\" \n              data-target={`#deleteConfirmModal${index}`}\n            >\n              Delete\n            </button>\n            <ConfirmDeleteModal \n              index={index} \n              handleDelete={(indexDelete) => this.props.handleDelete(indexDelete)} \n            />\n          </td>\n        </tr>\n      )\n    }\n    return (\n      <div>\n        <div className=\"list\">\n          <table className=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\" style={{minWidth: 80 + 'px'}}>Edit</th>\n                <th scope=\"col\" style={{minWidth: 90 + 'px'}}>Delete</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.props.list.slice(startIndex, endIndex).map(UserDetail)}\n            </tbody>\n          </table>\n        </div>\n        <Pagination items={this.props.list} onChangePage={(pageIndex, totalPages) => this.onChangePage(pageIndex, totalPages)} />\n      </div>\n    );  \n  }\n}\n\nexport default List;","import React from 'react';\nimport '../../css/detail.css';\n\nclass FormWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {\n        name: props.user.name,\n        email: props.user.email,\n      },\n      errorMessage: {\n        name: '',\n        email: '',\n      },\n      enableSubmit: true,\n    }\n  }\n\n  validateSubmit = (type) => {\n    const { user } = this.state; \n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    let message = this.state.errorMessage;\n    message.name = '';\n    message.email = '';\n\n    if (user.name == '') {\n      message.name = message.name + 'Hay nhap ten' + '\\r\\n'\n    }\n    if (user.email == '') {\n      message.email = message.email + 'Hay nhap email' + '\\r\\n'\n    } else if (!re.test(user.email)) {\n      message.email = message.email + 'Hay nhap dung dinh dang email' + '\\r\\n'\n    }\n    this.setState({\n      errorMessage: message,\n    })\n\n    if (message.name || message.email) {\n      return false;\n    }\n    return true;\n  }\n\n  handleChange = async (e) => {\n    const inputName = e.target.name;\n    const user = this.state.user;\n    user[inputName] = e.target.value;\n    await this.setState({ user, });\n    if(!this.validateSubmit()) {\n      this.setState({\n        enableSubmit: false,\n      })\n    }\n  }\n\n  render() {\n    const Input = (child, index) => (\n      <div className=\"form-group\" key={index}>\n        <label htmlFor={child.props.id}>{child.props.name}</label>\n        <child.type \n          {...child.props}\n          className={`form-control ${this.state.errorMessage[child.props.name] ? 'is-invalid' : ''}`}\n          value={this.state.user[child.props.name]}\n          onChange={(e) => this.handleChange(e)}\n        />\n        <div className=\"invalid-feedback\">\n          {this.state.errorMessage[child.props.name]}\n        </div>\n      </div>\n    )\n    return (\n      <form>\n        {this.props.children.map(Input)}\n\n        <div className=\"float-right\">\n          <input\n            type=\"button\"\n            className=\"btn btn-secondary mr-5\"\n            onClick={() => this.props.handleCancel()}\n            value=\"Cancel\"\n          />\n          <input\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={() => this.props.handleSubmit(this.state.user)}\n            value=\"Save\"\n            disabled={!this.state.enableSubmit}\n          />\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default FormWrapper;\n\n","import React from 'react';\nimport '../css/detail.css';\nimport FormWrapper from './common/FormWrapper'\n\nclass Detail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {\n        name: this.props.user.name,\n        email: this.props.user.email,\n      },\n      errorMessage: {\n        name: '',\n        email: '',\n      },\n      enableSubmit: true,\n    }\n  }\n\n  // handleChange = async (e) => {\n  //   const inputName = e.target.name;\n  //   await this.setState({ [inputName]: e.target.value });\n  //   if(!this.validateSubmit()) {\n  //     this.setState({\n  //       enableSubmit: false,\n  //     })\n  //   }\n  // }\n\n  handleSubmit = (user) => {\n    const userUpdate = { 'name': user.name, 'email': user.email };\n    this.props.handleUpdate(userUpdate);\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <FormWrapper \n            user={this.state.user}\n            handleCancel={() => this.props.handleCancel()}\n            handleSubmit={(user) => this.handleSubmit(user)}\n          >\n              <input\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n              />\n              <input\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                aria-describedby=\"emailHelp\"\n              />\n          </FormWrapper>\n          {/* <form>\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Name</label>\n              <input\n                type=\"text\"\n                className={`form-control ${this.state.errorMessage.name ? 'is-invalid' : ''}`}\n                id=\"name\"\n                name=\"name\"\n                value={this.state.name}\n                onChange={(e) => this.handleChange(e)}\n              />\n              <div className=\"invalid-feedback\">\n                {this.state.errorMessage.name}\n              </div>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email</label>\n              <input\n                type=\"email\"\n                className={`form-control ${this.state.errorMessage.email ? 'is-invalid' : ''}`}\n                id=\"email\"\n                name=\"email\"\n                aria-describedby=\"emailHelp\"\n                value={this.state.email}\n                onChange={(e) => this.handleChange(e)}\n              />\n              <div className=\"invalid-feedback\">\n                {this.state.errorMessage.email}\n              </div>\n            </div>\n\n            <div className=\"float-right\">\n              <input\n                type=\"button\"\n                className=\"btn btn-secondary mr-5\"\n                onClick={() => this.props.handleCancel()}\n                value=\"Cancel\"\n              />\n              <input\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={() => this.handleSubmit()}\n                value=\"Save\"\n                disabled={!this.state.enableSubmit}\n              />\n            </div>\n          </form> */}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Detail;","import React from 'react';\nimport '../css/body.css';\nimport List from './list.js';\nimport Detail from './detail.js';\n\n\nclass Body extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const listDefault = [\n      { 'name': 'duy', 'email': 'duy@gmail.com' },\n      { 'name': 'dung', 'email': 'dung@gmail.com' },\n      { 'name': 'duy1', 'email': 'duy1@gmail.com' },\n      { 'name': 'dung1', 'email': 'dung1@gmail.com' },\n      { 'name': 'duy2', 'email': 'duy2@gmail.com' },\n      { 'name': 'dung2', 'email': 'dung2@gmail.com' },\n    ];\n    if(!localStorage.getItem('list')) {\n      localStorage.setItem('list', JSON.stringify(listDefault));\n    }\n    const list = localStorage.getItem('list') ? JSON.parse(localStorage.getItem(\"list\") || \"[]\") : listDefault;\n    \n    this.state = {\n      list: list,\n      editStatus: false,\n      editUser: '',\n      editIndex: '',\n    }\n  }\n\n  handleEdit(index) {\n    console.log(index);\n    this.setState({\n      editStatus: true,\n      editUser: this.state.list[index],\n      editIndex: index,\n    })\n  }\n\n  updateLocalStorage = () => {\n    localStorage.setItem('list', JSON.stringify(this.state.list));\n  }\n\n  handleCancel() {\n    this.setState({\n      editStatus: false,\n      editUser: '',\n      editIndex: '',\n    })\n  }\n\n  async handleUpdate(user) {\n    console.log(user);\n    let list = [...this.state.list];\n    const index = this.state.editIndex;\n    list[index] = user;\n    await this.setState({\n      list: list,\n      editStatus: false,\n      editUser: '',\n      editIndex: ''\n    })\n\n    this.updateLocalStorage()\n  }\n\n  async handleDelete(index) {\n    let list = [...this.state.list];\n    list.splice(index, 1);\n    await this.setState({\n      list: list,\n    })\n\n    this.updateLocalStorage();\n  }\n\n  render() {\n    let detail;\n    if(this.state.editStatus) {\n      detail = (\n        <div className=\"col-md detail\">\n          <Detail\n            editStatus={this.state.editStatus}\n            user={this.state.editUser}\n            handleCancel={() => this.handleCancel()}\n            handleUpdate={(user) => this.handleUpdate(user)}\n          />\n        </div>\n      )\n    } else {\n      detail = \"\";\n    }\n    return (\n      <div className=\"body row m-0\">\n        <div className=\"col-md list\">\n          <List\n            list={this.state.list}\n            handleEdit={(index) => this.handleEdit(index)}\n            editStatus={this.state.editStatus}\n            handleDelete={(index) => this.handleDelete(index)}\n          />\n        </div>\n        {detail}\n        \n      </div>\n    );\n  }\n}\n\nexport default Body;","import React from 'react';\nimport Header from './component/header.js';\nimport Body from './component/body.js';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className='app container'>\n      <Header startTime={new Date()} />\n      <Body />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n// import $ from \"jquery\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\n// global.jQuery = require('jquery');\n// require('bootstrap');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}