{"version":3,"sources":["component/header.js","component/list.js","component/detail.js","component/body.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","List","props","handleHover","e","index","setState","hoverIndex","handleHoverOut","state","scope","style","minWidth","this","list","map","user","key","onMouseOver","onMouseOut","name","email","editStatus","type","onClick","handleEdit","React","Component","Detail","handleChange","a","inputName","target","value","validateSubmit","message","errorMessage","test","handleSubmit","handleUpdate","newProps","htmlFor","id","onChange","class","aria-describedby","handleCancel","Body","editUser","editIndex","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.f50cd9d7.chunk.js","sourcesContent":["import React from 'react';\nimport '../css/header.css';\n\nfunction Header() {\n  return (\n    <div className=\"header col-md-12 p-2\">\n      <h2>Header</h2>\n    </div>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport '../css/list.css';\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hoverIndex: -1,\n    }\n  }\n\n  handleHover = (e, index) => {\n    this.setState({\n      hoverIndex: index\n    })\n  }\n\n  handleHoverOut = (e, index) => {\n    this.setState({\n      hoverIndex: -1\n    })\n  } \n\n  render() {\n    const UserDetail = (user, index) => (\n      <tr \n        key={index} \n        onMouseOver={(e) => this.handleHover(e, index)}\n        onMouseOut={(e) => this.handleHoverOut(e, index)}\n      >\n        <td>{user.name}</td>\n        <td>{user.email}</td>\n        <td\n          className={index === this.state.hoverIndex && !this.props.editStatus ? \"enable\":\"\"}\n        >\n          <button \n            type=\"button\" \n            className=\"btn btn-outline-info btn-sm mx-auto\"\n            onClick={() => this.props.handleEdit(index)}\n          >\n            Edit\n          </button>\n        </td>\n        <td\n          className={index === this.state.hoverIndex && !this.props.editStatus ? \"enable\":\"\"}\n        >\n          <button \n            type=\"button\" \n            className=\"btn btn-outline-danger btn-sm mx-auto\"\n          >\n            Delete\n          </button>\n        </td>\n      </tr>\n    )\n    return (\n      <div className=\"list\">\n        <table className=\"table table-hover table-bordered\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Email</th>\n              <th scope=\"col\" style={{minWidth: 80 + 'px'}}>Edit</th>\n              <th scope=\"col\" style={{minWidth: 90 + 'px'}}>Delete</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.list.map(UserDetail)}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default List;","import React from 'react';\nimport '../css/detail.css';\n\nclass Detail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: props.user.name,\n      email: props.user.email,\n      errorMessage: {\n        name: '',\n        email: '',\n      },\n    }\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.setState({\n      name: newProps.user.name,\n      email: newProps.user.email,\n      errorMessage: {\n        name: '',\n        email: '',\n      },\n    })\n  }\n\n  handleChange = async (e) => {\n    const inputName = e.target.name;\n    await this.setState({ [inputName]: e.target.value });\n    this.validateSubmit()\n  }\n\n  validateSubmit = (type) => {\n    const name = this.state.name;\n    const email = this.state.email;\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    let message = this.state.errorMessage;\n    message.name = '';\n    message.email = '';\n\n    if (name == '') {\n      message.name = message.name + 'Hay nhap ten' + '\\r\\n'\n    }\n    if (email == '') {\n      message.email = message.email + 'Hay nhap email' + '\\r\\n'\n    } else if (!re.test(email)) {\n      message.email = message.email + 'Hay nhap dung dinh dang email' + '\\r\\n'\n    }\n    this.setState({\n      errorMessage: message,\n    })\n\n    if (type == 'submit') {\n      if (message.name || message.email) {\n        return false;\n      }\n      return true;\n    }\n  }\n\n  handleSubmit = () => {\n    if (this.validateSubmit('submit')) {\n      const user = { 'name': this.state.name, 'email': this.state.email };\n      this.props.handleUpdate(user);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div className={this.props.editStatus ? 'd-block' : 'd-none'}>\n          <form>\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Name</label>\n              <input\n                type=\"text\"\n                className={`form-control ${this.state.errorMessage.name ? 'is-invalid' : ''}`}\n                id=\"name\"\n                name=\"name\"\n                value={this.state.name}\n                onChange={(e) => this.handleChange(e)}\n              />\n              <div class=\"invalid-feedback\">\n                {this.state.errorMessage.name}\n              </div>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email</label>\n              <input\n                type=\"email\"\n                className={`form-control ${this.state.errorMessage.email ? 'is-invalid' : ''}`}\n                id=\"email\"\n                name=\"email\"\n                aria-describedby=\"emailHelp\"\n                value={this.state.email}\n                onChange={(e) => this.handleChange(e)}\n              />\n              <div class=\"invalid-feedback\">\n                {this.state.errorMessage.email}\n              </div>\n            </div>\n\n            <div className=\"float-right\">\n              <input\n                type=\"button\"\n                className=\"btn btn-secondary mr-5\"\n                onClick={() => this.props.handleCancel()}\n                value=\"Cancel\"\n              />\n              <input\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={() => this.handleSubmit()}\n                value=\"Save\"\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Detail;","import React from 'react';\nimport '../css/body.css';\nimport List from './list.js';\nimport Detail from './detail.js';\n\n\nclass Body extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [\n        {'name': 'duy', 'email': 'vanduy07c.r@gmail.com'},\n        {'name': 'dung', 'email': 'dim@gmail.com'}\n      ],\n      editStatus: false,\n      editUser: '',\n      editIndex: '',\n    }\n  }\n\n  handleEdit(index) {\n    this.setState({\n      editStatus: true,\n      editUser: this.state.list[index],\n      editIndex: index,\n    })\n  }\n\n  handleCancel() {\n    this.setState({\n      editStatus: false,\n      editUser: '',\n      editIndex: '',\n    })\n  }\n\n  handleUpdate (user) {\n    let list = [...this.state.list];\n    const index = this.state.editIndex;\n    list[index] = user;\n    this.setState({\n      list: list,\n      editStatus: false,\n      editUser: '',\n      editIndex: ''\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"body row m-0\">\n        <div className=\"col-md list\">\n          <List \n            list={this.state.list}\n            handleEdit={(index) => this.handleEdit(index)}\n            editStatus={this.state.editStatus}\n          />\n        </div>\n        <div className=\"col-md detail\">\n          <Detail \n            editStatus={this.state.editStatus} \n            user={this.state.editUser}\n            handleCancel={() => this.handleCancel()}\n            handleUpdate={(user) => this.handleUpdate(user)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Body;","import React from 'react';\nimport Header from './component/header.js';\nimport Body from './component/body.js';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className='app container'>\n      <Header />\n      <Body />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}